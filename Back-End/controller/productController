const products = require('../models/productModels.js');
const supabase = require('../config/db.js');

const getProducts = async (req, res) => {
    
    console.log('userId:', req.userId);
    try {
        const allProducts = await products.getAllById(req.userId);


        if (!allProducts || allProducts.length === 0) {
            return res.status(404).json({ message: "Products not found" });
        }
        res.status(200).json(allProducts);
    } catch (error) {
        res.status(500).json({ message: "Server Error", error: error.message });
    }
};

const getProductById = async (req, res) => {
    try {
        const { id } = req.params;
        const product = await products.getById(id);

        if (!product) {
            return res.status(404).json({ message: "Product not found" });
        }
        res.status(200).json(product);
    } catch (error) {
        res.status(500).json({ message: "Server Error", error: error.message });
    }
};

const createProduct = async (req, res) => {
    try {
        const { name, productUrl, currentPrice, targetPrice, notes, category, priority } = req.body;

        if (!name || !productUrl || !currentPrice || !targetPrice || !category || !priority) {
            return res.status(400).json({ message: "Invalid product data" });
        }

        const { data, error } = await supabase
            .from('products')
            .insert([{
                product_name : name,
                product_url: productUrl,
                current_price: currentPrice,
                target_price: targetPrice,
                notes: notes,
                category : category,
                priority : priority,
                user_id : req.userId
            }])
            .select();

        if (error) throw error;

        res.status(201).json({
            message: "Product created successfully",
            product: data[0]
        });
    } catch (error) {
        console.log(error);
        res.status(500).json({ message: "Server Error", error: error.message });
    }
};

const updateProduct = async (req, res) => {
    try {
        const { id } = req.params;
        const { data: updatedProduct, error } = await supabase
            .from('products')
            .update(req.body)
            .eq('id', id)
            .select()
            .single();

        if (error) throw error;

        if (!updatedProduct) {
            return res.status(404).json({ message: "Product not found" });
        }
        res.status(200).json(updatedProduct);
    } catch (error) {
        res.status(500).json({ message: "Server Error", error: error.message });
    }
};

const deleteProduct = async (req, res) => {
    try {
        const { id } = req.params;
        const { error } = await supabase
            .from('products')
            .delete()
            .eq('id', id);

        if (error) throw error;

        res.status(200).json({ message: "Product deleted successfully" });
    } catch (error) {
        res.status(500).json({ message: "Server Error", error: error.message });
    }
};



module.exports = {
    getProducts,
    createProduct,
    updateProduct,
    deleteProduct,
    getProductById,
};
